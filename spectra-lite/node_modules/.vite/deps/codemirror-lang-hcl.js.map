{
  "version": 3,
  "sources": ["../../codemirror-lang-hcl/dist/index.js"],
  "sourcesContent": ["import { styleTags, tags } from '@lezer/highlight';\nimport { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\nconst hclHighlight = styleTags({\n    \"for in if else endfor endif\": tags.controlKeyword,\n    \"Attribute/Identifier\": tags.definition(tags.propertyName),\n    \"ForIntro/Identifier\": tags.definition(tags.propertyName),\n    \"Block/Identifier\": tags.definitionKeyword,\n    \"FunctionCall/Identifier\": tags.function(tags.variableName),\n    \"Attribute/Expression\": tags.attributeValue,\n    \"VariableExpr/Identifier\": tags.variableName,\n    \"GetAttr/Identifier\": tags.variableName,\n    Identifier: tags.name,\n    \"LiteralValue/...\": tags.literal,\n    \"StringLit/... TemplateLiteral\": tags.string,\n    NumericLit: tags.number,\n    BoolLit: tags.bool,\n    NullLit: tags.null,\n    Comment: tags.comment,\n    LineComment: tags.lineComment,\n    BlockComment: tags.blockComment,\n    \"( )\": tags.paren,\n    \"{ }\": tags.bracket,\n    \"[ ]\": tags.squareBracket,\n    ArithOp: tags.arithmeticOperator,\n    LogicOp: tags.logicOperator,\n    CompareOp: tags.compareOperator,\n    ControlOp: tags.controlOperator,\n    HeredocIdentifier: tags.special(tags.controlKeyword),\n    HeredocStart: tags.special(tags.brace),\n    \"TemplateInterpolationStart TemplateInterpolationEnd\": tags.special(tags.brace),\n    \"TemplateDirectiveStart TemplateDirectiveEnd\": tags.special(tags.brace),\n    StripMarker: tags.special(tags.brace),\n    Ellipsis: tags.punctuation,\n    \": =>\": tags.punctuation,\n    \",\": tags.separator,\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst QuotedTemplateStart = 1,\n  QuotedTemplateEnd = 2,\n  TemplateInterpolationStart = 3,\n  TemplateInterpolationEnd = 4,\n  TemplateDirectiveStart = 5,\n  TemplateDirectiveEnd = 6,\n  HeredocIdentifier = 7,\n  templateLiteralChunk = 93;\n\nconst ContextType = {\n  QUOTED_TEMPLATE: 1,\n  TEMPLATE_INTERPOLATION: 2,\n  TEMPLATE_DIRECTIVE: 4,\n  HEREDOC_TEMPLATE: 8,\n};\n\nconst hashStr = function (str) {\n  var hash = 0,\n    i,\n    chr;\n  if (str.length === 0) return hash;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\n\nclass Context {\n  constructor(parent, type, heredoc_identifier) {\n    this.parent = parent;\n    this.type = type;\n    this.heredoc_identifier = heredoc_identifier;\n    this.hash =\n      (parent ? (parent.hash + parent.hash) << 8 : 0) +\n      (type << 4) +\n      (this.heredoc_identifier === \"\" ? 0 : hashStr(this.heredoc_identifier));\n  }\n}\n\nconst topCtx = new Context(null, \"\", \"\");\n\nconst trackTemplate = new ContextTracker({\n  start: topCtx,\n  shift(context, term, stack, input) {\n    if (term === QuotedTemplateStart) {\n      return new Context(context, ContextType.QUOTED_TEMPLATE, \"\");\n    }\n    if (term === TemplateInterpolationStart) {\n      return new Context(context, ContextType.TEMPLATE_INTERPOLATION, \"\");\n    }\n    if (term === TemplateDirectiveStart) {\n      return new Context(context, ContextType.TEMPLATE_DIRECTIVE, \"\");\n    }\n    if (\n      term === HeredocIdentifier &&\n      context.type !== ContextType.HEREDOC_TEMPLATE\n    ) {\n      const ctx = new Context(\n        context,\n        ContextType.HEREDOC_TEMPLATE,\n        input.read(input.pos, stack.pos)\n      );\n      return ctx;\n    }\n\n    if (\n      term === HeredocIdentifier &&\n      context.type === ContextType.HEREDOC_TEMPLATE\n    ) {\n      return context.parent;\n    }\n    switch (term) {\n      case QuotedTemplateEnd:\n      case TemplateInterpolationEnd:\n      case TemplateDirectiveEnd:\n        return context.parent;\n    }\n\n    return context;\n  },\n  hash(context) {\n    return context.hash;\n  },\n});\n\n// export const insertSemicolon = new ExternalTokenizer(\n//   (input, stack) => {\n//     let { next } = input;\n//     if (next == braceR || next == -1 || stack.context)\n//       input.acceptToken(insertSemi);\n//   },\n//   { contextual: true, fallback: true }\n// );\n\nconst scanQuotedTemplateStart = new ExternalTokenizer(\n  (input, stack) => {\n    if (\n      stack.canShift(QuotedTemplateStart) &&\n      !(stack.context && stack.context.type === ContextType.QUOTED_TEMPLATE) &&\n      String.fromCharCode(input.next) === '\"'\n    ) {\n      input.advance();\n      return input.acceptToken(QuotedTemplateStart);\n    }\n  },\n  { contextual: true, fallback: true }\n);\nconst scanQuotedTemplateEnd = new ExternalTokenizer(\n  (input, stack) => {\n    if (\n      stack.canShift(QuotedTemplateEnd) &&\n      stack.context &&\n      stack.context.type === ContextType.QUOTED_TEMPLATE &&\n      String.fromCharCode(input.next) === '\"'\n    ) {\n      input.advance();\n      return input.acceptToken(QuotedTemplateEnd);\n    }\n  },\n  { contextual: true, fallback: true }\n);\n\nconst scanTemplateLiteralChunk = new ExternalTokenizer(\n  (input, stack) => {\n    if (\n      stack.canShift(templateLiteralChunk) &&\n      stack.context &&\n      stack.context.type === ContextType.QUOTED_TEMPLATE\n    ) {\n      switch (String.fromCharCode(input.next)) {\n        case \"\\\\\":\n          input.advance();\n          switch (String.fromCharCode(input.next)) {\n            case '\"':\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"\\\\\":\n              input.advance();\n              return input.acceptToken(templateLiteralChunk);\n            case \"u\":\n              for (let i = 0; i < 4; i++) {\n                input.advance();\n                if (!/[0-9a-fA-F]/.test(String.fromCharCode(input.next))) {\n                  return;\n                }\n              }\n              input.advance();\n              return input.acceptToken(templateLiteralChunk);\n            case \"U\":\n              for (let i = 0; i < 8; i++) {\n                input.advance();\n                if (!/[0-9a-fA-F]/.test(String.fromCharCode(input.next))) {\n                  return;\n                }\n              }\n              input.advance();\n              return input.acceptToken(templateLiteralChunk);\n            default:\n              return;\n          }\n      }\n    }\n\n    if (\n      stack.canShift(templateLiteralChunk) &&\n      stack.context &&\n      (stack.context.type === ContextType.QUOTED_TEMPLATE ||\n        stack.context.type === ContextType.HEREDOC_TEMPLATE) &&\n      input.next !== -1\n    ) {\n      input.advance();\n      return input.acceptToken(templateLiteralChunk);\n    }\n  },\n  { contextual: true, fallback: true }\n);\nconst scanTemplateInterpolationStart = new ExternalTokenizer(\n  (input, stack) => {\n    if (\n      stack.canShift(TemplateInterpolationStart) &&\n      stack.canShift(templateLiteralChunk) &&\n      !(\n        stack.context &&\n        stack.context.type === ContextType.TEMPLATE_INTERPOLATION\n      ) &&\n      String.fromCharCode(input.next) === \"$\"\n    ) {\n      input.advance();\n      if (String.fromCharCode(input.next) === \"{\") {\n        input.advance();\n        return input.acceptToken(TemplateInterpolationStart);\n      }\n\n      // escape sequence\n      if (String.fromCharCode(input.next) === \"$\") {\n        input.advance();\n        if (String.fromCharCode(input.next) === \"{\") {\n          // $${\n          input.advance();\n          return input.acceptToken(templateLiteralChunk);\n        }\n      }\n\n      return input.acceptToken(templateLiteralChunk);\n    }\n  },\n  { contextual: true, fallback: true }\n);\nconst scanTemplateInterpolationEnd = new ExternalTokenizer(\n  (input, stack) => {\n    if (\n      stack.canShift(TemplateInterpolationEnd) &&\n      stack.context &&\n      stack.context.type === ContextType.TEMPLATE_INTERPOLATION &&\n      String.fromCharCode(input.next) === \"}\"\n    ) {\n      input.advance();\n      return input.acceptToken(TemplateInterpolationEnd);\n    }\n  },\n  { contextual: true, fallback: true }\n);\nconst scanTemplateDirectiveStart = new ExternalTokenizer(\n  (input, stack) => {\n    if (\n      stack.canShift(TemplateDirectiveStart) &&\n      stack.canShift(templateLiteralChunk) &&\n      !(\n        stack.context && stack.context.type === ContextType.TEMPLATE_DIRECTIVE\n      ) &&\n      String.fromCharCode(input.next) === \"%\"\n    ) {\n      input.advance();\n      if (String.fromCharCode(input.next) === \"{\") {\n        input.advance();\n        return input.acceptToken(TemplateDirectiveStart);\n      }\n\n      // escape sequence\n      if (String.fromCharCode(input.next) === \"%\") {\n        input.advance();\n        if (String.fromCharCode(input.next) === \"{\") {\n          // $${\n          input.advance();\n          return input.acceptToken(templateLiteralChunk);\n        }\n      }\n\n      return input.acceptToken(templateLiteralChunk);\n    }\n  },\n  { contextual: true, fallback: true }\n);\nconst scanTemplateDirectiveEnd = new ExternalTokenizer(\n  (input, stack) => {\n    if (\n      stack.canShift(TemplateDirectiveEnd) &&\n      stack.context &&\n      stack.context.type === ContextType.TEMPLATE_DIRECTIVE &&\n      String.fromCharCode(input.next) === \"}\"\n    ) {\n      input.advance();\n      return input.acceptToken(TemplateDirectiveEnd);\n    }\n  },\n  { contextual: true, fallback: true }\n);\n\nconst scanHeredocIdentifier = new ExternalTokenizer(\n  (input, stack) => {\n    if (\n      stack.canShift(HeredocIdentifier) &&\n      !(stack.context && stack.context.type === ContextType.HEREDOC_TEMPLATE) &&\n      input.next !== -1\n    ) {\n      let next = String.fromCharCode(input.next);\n      while (/[0-9a-zA-Z]/.test(next) || next === \"_\" || next === \"-\") {\n        input.advance();\n        next = String.fromCharCode(input.next);\n      }\n\n      return input.acceptToken(HeredocIdentifier);\n    }\n\n    if (\n      stack.canShift(HeredocIdentifier) &&\n      stack.canShift(templateLiteralChunk) &&\n      stack.context &&\n      stack.context.type === ContextType.HEREDOC_TEMPLATE &&\n      input.next != -1\n    ) {\n      const expected = stack.context.heredoc_identifier;\n\n      let has_leading_whitespace_with_newline = false;\n      let has_leading_whitespace = false;\n      let next = String.fromCharCode(input.next);\n      while (/\\s/.test(next)) {\n        has_leading_whitespace = true;\n        if (next === \"\\n\") {\n          has_leading_whitespace_with_newline = true;\n        }\n        input.advance();\n        next = String.fromCharCode(input.next);\n      }\n      if (has_leading_whitespace) {\n        input.acceptToken(templateLiteralChunk);\n      }\n\n      if (!has_leading_whitespace_with_newline) {\n        return;\n      }\n\n      let advance = 0;\n      for (let i = 0; i < expected.length; i++) {\n        if (String.fromCharCode(input.next) === expected[i]) {\n          input.advance();\n          advance++;\n        } else {\n          if (advance) {\n            input.acceptToken(templateLiteralChunk);\n          }\n          return\n        }\n      }\n\n      // check if the identifier is on a line of its own\n      let i = 0;\n      while (true) {\n        const ch = input.peek(i);\n        if (ch == -1 || String.fromCharCode(ch) === \"\\n\") {\n          return input.acceptToken(HeredocIdentifier);\n        }\n\n        if (!/\\s/.test(String.fromCharCode(ch))) {\n          return input.acceptToken(templateLiteralChunk);\n        }\n\n        i++;\n      }\n    }\n  },\n  { contextual: true, fallback: true }\n);\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_Identifier = {__proto__:null,true:39, false:41, null:45, for:64, in:66, endfor:70, if:76, else:80, endif:84};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"EzQ]Q&jOOPeO&jOOOmQ&kO'#DaO!kQ&kO'#CiOOQO'#EU'#EUO!yQ&jO'#ChQOQ&jOOPOOO'#Cd'#CdPOOO)C@S)C@SOOQy'#Cn'#CnOOQy'#Cq'#CqO#UQ)vO'#CvOOQy'#Cl'#ClOOQ!b'#DY'#DYO#dQ'|O'#DXOOQy'#Cu'#CuO$gQ&kO'#D^O$nQ&jO'#DbO%tQ&kO'#EgO&OQ&kO'#DaOOQy,59{,59{O&VQ&jO,59{OOQy'#DZ'#DZO'lQ'dO'#DcOOQy'#Di'#DiOOQP'#Dp'#DpOOQP'#Dq'#DqO$yQ&kO'#DoO)|Q'dO'#CkOOQy'#Dn'#DnOOQy'#Ea'#EaO$yQ&kO'#EaOOQy'#Ck'#CkO#_Q)`O'#CsO$yQ&kO,59TOOQP'#EZ'#EZO*sQ&kO,5:oO+OQ&jO,5:oOOQO-E8S-E8SO+WQ+YO'#CtO+iQ)vO,59_O+wQ&sO'#CwO,RQ)tO'#CzO,^Q)tO'#DQOOQ%n'#Cy'#CyOOQ%n'#EV'#EVO,iQ)vO,59bOOQy,59b,59bO,wQ&jO'#DRO-SQ+WO,59sO-bQ&jO'#EfOOQy,59x,59xO-mQ&jO,59xO$yQ&kO,5:UO-rQ&jO'#DkO-wQ&kO,59|OOQP'#ER'#ERO$yQ&kO,5:lOOQP'#EX'#EXO.rQ&kO,5;RO.yQ&kO,5;RO/TQ&kO,5:XOOQy1G/g1G/gO0OQ&kO,5:POOQy,5:Z,5:ZOOQP'#Ds'#DsOOQP'#Dt'#DtOOQP'#Du'#DuOOQP'#Dv'#DvOOQP'#Dw'#DwOOQP'#Dx'#DxO$yQ&kO,5:^O$yQ&kO,5:^O$yQ&kO,5:^O$yQ&kO,5:^O$yQ&kO,5:^O$yQ&kO,5:^O$yQ&kO'#DzOOQy'#Dy'#DyO0VQ&jO'#D|OOQy'#EO'#EOOOQy'#EP'#EPOOQy'#D}'#D}OOQy,5:{,5:{O0[Q&jO,5:{O0dQ&lO,59_O0iQ&jO1G.oOOQP-E8X-E8XO0wQ&jO1G0ZOOQO1G0Z1G0ZO0zQ&jO1G0ZO+WQ+YO'#EbOOQ%n,59`,59`OOQy1G.y1G.yOOQ%n,59c,59cO1PQ&sO,59cO1ZQ&rO,59cOOQ%n,59f,59fO,RQ)tO,59fO1fQ&jO'#DOOOQ%n,59l,59lO1tQ)tO,59lO,^Q)tO,59lO2PQ&jO'#DTOOQ%n-E8T-E8TOOQy1G.|1G.|O2bQ&jO,59gO2gQ&jO,59mO$yQ&kO,59mO2oQ+WO1G/_OOQy1G/_1G/_O2}Q&kO,5;QO3UQ&jO,5;QOOQy1G/d1G/dO3^Q&jO1G/pO3iQ&jO,5:VO3qQ&kO1G/hOOQP'#Dc'#DcO4uQ&jO1G0WOOQP,5:s,5:sO4}Q&kO1G0mOOQP-E8V-E8VO5UQ,UO'#DcO5]Q,UO1G/sO6oQ,UO'#CkO6yQ&jO'#DgOOQy1G/k1G/kO7XQ&jO1G/kOOQy1G/x1G/xO9^Q'dO1G/xO9hQ'dO1G/xO;rQ'dO1G/xO;|Q'dO1G/xO=nQ'dO1G/xO>bQ&jO,5:fOOQy,5:h,5:hPOQy'#EY'#EYPOQy,5:j,5:jPOQy,5:k,5:kOOQy1G0g1G0gOOQO7+%u7+%uO>jQ&jO7+%uOOQ%n,5:|,5:|OOQ%n1G.}1G.}O>oQ&rO1G.}O>tQ&rO1G.}OOQ%n1G/Q1G/QO?PQ&jO,59jO?[Q'[O,59jOOQ%n1G/W1G/WO1tQ)tO1G/WO?dQ&jO'#DVO1tQ)tO1G/WO?rQ&jO,59oO@QQ'[O,59oO@YQ'[O,59qO@bQ&jO1G/RO@jQ&jO1G/RO$yQ&kO1G/XO@oQ'[O1G/XOOQy7+$y7+$yO@zQ&jO,5:rOA]Q&kO1G0lOOQO-E8U-E8UOOQy7+%[7+%[OAdQ&jO7+%[O$yQ&kO'#DlO$yQ&kO1G/qOAiQ&jO1G/qOOQP'#ES'#ESO$yQ&kO7+%rP$yQ&kO'#EXO$yQ&kO7+%_OAnQ&kO,5:ROAuQ&jO,5:ROOQO,5:R,5:ROOQy7+%V7+%VOOQy1G0Q1G0QPOQy-E8W-E8WOOQO<<Ia<<IaOOQ%n7+$i7+$iOBQQ&rO7+$iOBVQ'[O1G/UOOQ%n1G/U1G/UOB_Q'[O1G/UOOQ%n7+$r7+$rOBdQ&jO,59qO1tQ)tO7+$rOBoQ'[O1G/ZOBwQ'[O1G/]OOQ$Y1G/Z1G/ZOCPQ'[O1G/ZOOQ%n1G/]1G/]OCUQ'[O1G/]O$yQ&kO7+$mOCZQ&jO7+$mOC`Q&jO7+$mOChQ'[O7+$sOOQ$Y7+$s7+$sOCsQ'[O7+$sP$yQ&kO'#EWOOQy<<Hv<<HvOCxQ&jO,5:WODTQ&jO7+%]OD]Q&jO7+%]OOQy<<I^<<I^ODbQ&jO<<HyOE}Q,UO1G/xOGcQ,UO1G/xOHwQ,UO1G/xOJ]Q,UO1G/xOJdQ,UO1G/xOJkQ&kO1G/mOOQO1G/m1G/mOOQ%n<<HT<<HTOOQ%n7+$p7+$pOJrQ'[O7+$pOOQ%n<<H^<<H^OOQ$Y7+$u7+$uOJwQ'[O7+$uOOQ%n7+$w7+$wOJ|Q'[O7+$wOKRQ'[O<<HXOK^Q&jO<<HXO$yQ&kO<<HXOKcQ&jO<<HXOOQ$Y<<H_<<H_OKhQ'[O<<H_OOQP<<Hw<<HwO$yQ&kO<<HwOOQyAN>eAN>eOKmQ&jOAN>eOKrQ&jOAN>eOOQ%n<<H[<<H[OOQ$Y<<Ha<<HaOOQ%n<<Hc<<HcOOQ$YAN=sAN=sOKzQ'[OAN=sO$yQ&kOAN=sOLPQ'[OAN=sOL[Q&jOAN=sOOQ$YAN=yAN=yOLaQ&jOAN>cOOQyG24PG24POLiQ&jOG24POOQ$YG23_G23_OLnQ'[OG23_OLyQ'[OG23_O$yQ&kOG23_OOQPG23}G23}OOQyLD)kLD)kOOQ$YLD(yLD(yOMOQ'[OLD(yOMTQ'[OLD(yOOQ$Y!$'Le!$'LeOM`Q'[O!$'LeOOQ$Y!)9BP!)9BPO-wQ&kO'#DoO/TQ&kO'#DoOMeQ&kO'#CkO-wQ&kO,5:^O/TQ&kO,5:^O-wQ&kO,5:^O/TQ&kO,5:^O-wQ&kO,5:^O/TQ&kO,5:^O-wQ&kO,5:^O/TQ&kO,5:^O-wQ&kO,5:^O/TQ&kO,5:^O-wQ&kO,5:^O/TQ&kO,5:^ON[Q&kO1G/xO! XQ&kO1G/xO!!UQ&kO1G/xO!%UQ&kO1G/xO!%]Q&kO1G/xO-wQ&kO7+%rO/TQ&kO7+%rO4uQ&jO1G0WO4uQ&jO1G0WO$yQ&kO,5:lO$yQ&kO,5:l\",\n  stateData: \"!%l~O#ROSXPQYPQ~O^RO!SQO~OXVOYVO~OPZO^gOa[OcXOdXOfYO!P`O!RdO!ScO!YoO#W]O#X]O#^iO#_jO~OPqO^sO!SuO#SrO~O^RO#O[X!R[X~OQ!PORyOT!QO#PwO~OV!RO~OPZO^gOa[OcXOdXOfYOp!WO!P`O!ScO!YoO#W]O#X]O#^iO#_jO~O!O!TO~P#iO#S!XO#[!XO#o!YO~OPZO^gOa[OcXOdXOfYO!P`O!ScO!YoO#W]O#X]O#^iO#_jO~O#V!]O!R#ZX~P$yOp!WO~PmO!R!`O~O!Y!aO!P!VX!o!VX#^!VX#`!VX#a!VX#b!VX#c!VX#d!VX#e!VX#f!VX#g!VX#h!VX#i!VX#j!VX#k!VX#l!VX#m!VX#n!VX#o!VX~O#S!VX#[!VX!O!VX#V!VX!W!VX^!VX#O!VXS!VXl!VXv!VX![!VXU!VX!R!VX~P&[O!o!pO#^!dO#`!cO#a!cO#b!cO#c!dO#d!eO#e!eO#f!eO#g!eO#h!fO#i!fO#j!gO#k!hO#l!qO#m!rO#n!sO#o_X#V_X^_X!R_X~O!P!oO#S_X#[_X!O_X!W_X#O_XS_Xl_Xv_X![_XU_X~P(iOPqO^sO!S!zO~O^RO!R!{O~O#P!}OQ#UPR#UPT#UPV#UP~OQ#POR!yXT!yX#P!yX~OS#QOl#RO~P$yORyOT#VO#PwO~ORyOT#ZO#PwO~OQ#]ORyOT!QO#PwO~Ol#_Op#^Ov#`O~ORyOT!QOV#bO#PwO~O#V#cO#o!YO!O#YX~O!O#eO~O^#gO~OPZO^#iOa[OcXOdXOfYO!P`O!ScO!YoO#W]O#X]O#^iO#_jO~O!R#Za~P$yO#V#lO!R#Za~P$yOPZO^#nOa[OcXOdXOfYO!P`O!ScO!YoO#W]O#X]O#^iO#_jO~O!W#rO~P$yO^#{O~O!W$PO#o!YO~OQ#PO~O#o!YO^]i#O]i!R]i~O^RO!R$QO~OS$TOl$UO~P$yOS$TOl$UO#o!YO~Ol$XOp#^Os$YOv#`O~ORyOT$]O#PwO~Ol$_Op#^Ov#`Ox$`Oz$aO~O^$bO~Op$cOv$dO~ORyOT!QOV$fO#PwO~O!O#Ya~P$yO#V$hO!O#Ya~Ov$lO!O$jO#o!YO~Oq$mO#V$nO~O#o!YOP!Ui^!Uia!Uic!Uid!Uif!Ui!P!Ui!R!Ui!S!Ui!Y!Ui#V!Ui#W!Ui#X!Ui#^!Ui#_!Ui~O#[$oO#o!YO~O!R#Zi~P$yO#]!VX~P&[O#]$rO#o!YO~O!o!pO#^!dO#`!cO#a!cO#b!cO#c!dO#d!eO#e!eO#f!eO#g!eO#h!fO#i!fO#j!gO#k!hO#l!qO#m!rO#n!sO#o_X~O!P!oO#]_X~P5eO![$uO#V$sO#o!YO!W!ZX~O!W$vO~O#`!cO#a!cO#b!cO!P!fi!o!fi#S!fi#[!fi#d!fi#e!fi#f!fi#g!fi#h!fi#i!fi#j!fi#k!fi#l!fi#m!fi#n!fi#o!fi!O!fi#V!fi!W!fi^!fi#O!fiS!fil!fiv!fi![!fiU!fi!R!fi~O#^!fi#c!fi~P7^O#^!dO#c!dO~P7^O#^!dO#`!cO#a!cO#b!cO#c!dO#d!eO#e!eO#f!eO#g!eO!P!fi!o!fi#S!fi#[!fi#j!fi#k!fi#l!fi#m!fi#n!fi#o!fi!O!fi#V!fi!W!fi^!fi#O!fiS!fil!fiv!fi![!fiU!fi!R!fi~O#h!fi#i!fi~P9rO#h!fO#i!fO~P9rO#^!dO#`!cO#a!cO#b!cO#c!dO#d!eO#e!eO#f!eO#g!eO#h!fO#i!fO#j!gO!P!fi!o!fi#k!fi#l!fi#m!fi#n!fi#o!fi#V!fi^!fi!R!fi~O#S!fi#[!fi!O!fi!W!fi#O!fiS!fil!fiv!fi![!fiU!fi~P<WO!O$wO#o!YO~O!R$yO~OS$zO~OS$zOl${O#o!YO~Op$cOs$|Ov$dO~OU$}Ol%OO~Ol%QOp#^Ov#`Oz$aO~Op$cOv$dOx%SOz%TO~OU%UOl%VO~OU%WOl%XO~Oq%YO#V%ZO~O^%[O~OU%^Ol%_O#o!YO~O#o!YO!O!za#V!za!W!za![!za~O!O#Yi~P$yO!O%aO~O^%dO~O!W!Za~P$yO![%mO#V%lO!W!Za~OS%nO~OU%oOl%pO~OU%oO~Op$cOv$dOz%TO~OU%rOl%sO~OU%tOl%uO~OU%rO~OU%tO~O^%wO~Oq%xO#V%yO~OU%zOl%{O#o!YO~OU%zO~O#o!YO!O!`a!R!`a~O#[%|O#o!YO~Oq%}O~Ov$lO!R&OO![&QO#o!YO~O#`!cO#a!cO#b!cO!P!fi!o!fi#^!fi#c!fi#d!fi#e!fi#f!fi#g!fi#h!fi#i!fi#j!fi#k!fi#l!fi#m!fi#n!fi#o!fi~O#]!fi~PDpO#^!dO#`!cO#a!cO#b!cO#c!dO!P!fi!o!fi#d!fi#e!fi#f!fi#g!fi#h!fi#i!fi#j!fi#k!fi#l!fi#m!fi#n!fi#o!fi~O#]!fi~PFUO#^!dO#`!cO#a!cO#b!cO#c!dO#d!eO#e!eO#f!eO#g!eO!P!fi!o!fi#h!fi#i!fi#j!fi#k!fi#l!fi#m!fi#n!fi#o!fi~O#]!fi~PGjO#^!dO#`!cO#a!cO#b!cO#c!dO#d!eO#e!eO#f!eO#g!eO#h!fO#i!fO!P!fi!o!fi#]!fi#k!fi#l!fi#m!fi#n!fi#o!fi~O#j!fi~PIOO#j!gO~PIOO!W!Zi~P$yOU&RO~OU&SO~OU&TO~OU&UOl&VO#o!YO~Oq&WO~O^&YO~OU&ZO~O!R&]O~Ov$lO!R&]O~OU&_O~OU&_Ol&aO#o!YO~Oq&bO~O#[&cO#o!YO~O!R&dO~OU&eOl&fO#o!YO~OU&eO~OU&hO~OU&hOl&iO#o!YO~OU&jO~OP_Xa_Xc_Xd_Xf_X!P_X!S_X!Y_X#W_X#X_X#__X~P(iOP!fi^!fia!fic!fid!fif!fi!R!fi!S!fi!Y!fi#V!fi#W!fi#X!fi#_!fi~PDpOP!fi^!fia!fic!fid!fif!fi!R!fi!S!fi!Y!fi#V!fi#W!fi#X!fi#_!fi~PFUOP!fi^!fia!fic!fid!fif!fi!R!fi!S!fi!Y!fi#V!fi#W!fi#X!fi#_!fi~PGjO#^!dO#`!cO#a!cO#b!cO#c!dO#d!eO#e!eO#f!eO#g!eO#h!fO#i!fOP!fi^!fia!fic!fid!fif!fi!P!fi!R!fi!S!fi!Y!fi!o!fi#V!fi#W!fi#X!fi#_!fi#k!fi#l!fi#m!fi#n!fi#o!fi~O#j!fi~P!#RO#j!gO~P!#ROa!o#l^X#a^~\",\n  goto: \"=w#[PPPPPPPP#]PPP#`#iP#o%mP&|PP&|P(])p%m*T+dP+d+r,QPP,`P+r,fP,tP,zP*T-Y%mPP.iPP/x1[%mP%mP1iP%m1l2{3R1l%m3[4k4k3[6O6h6}7a7p7|8V8[P8V8V8`8`8e9_:O#i:X:a:{;VP;]PPPPP;c=jPPP=p=sRWPQUOQ!|uR$R!zXSOTu!z^aQbc!]!^#l$qQ!S`Q!voQ!xrQ#SyQ#f!VQ#h!XQ#j!ZQ#o!_Q#q!aQ#z!oQ$V#RQ$e#`Y$g#c$h$s%`%lQ%]$dQ%b$lQ%c$mU%e$p'P'QQ%f$rQ%v%YQ&X%xQ&[%}Q&`&WQ&g&bQ'R'TR'S'U#knQ`bckory!V!X!Z!]!^!_!a!i!j!k!l!m!n!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b&k&l&n&o&p&q&r&s&t&u&v&w&x&y'P'Q'T'U#k[Q`bckory!V!X!Z!]!^!_!a!i!j!k!l!m!n!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b&k&l&n&o&p&q&r&s&t&u&v&w&x&y'P'Q'T'U#j[Q`bckory!V!X!Z!]!^!_!a!i!j!k!l!m!n!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b&k&l&n&o&p&q&r&s&t&u&v&w&x&y'P'Q'T'UTsRtQxZf}z{!O!R#U#X#Y#a$[$^%RR!wq#k_Q`bckory!V!X!Z!]!^!_!a!i!j!k!l!m!n!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b&k&l&n&o&p&q&r&s&t&u&v&w&x&y'P'Q'T'Ui}Zz{!O!R#U#X#Y#a$[$^%Ri|Zz{!O!R#U#X#Y#a$[$^%RizZz{!O!R#U#X#Y#a$[$^%RQ#TzR$W#Ui{Zz{!O!R#U#X#Y#a$[$^%RQ#X{R$^#YQ#W{S$Z#X#YS%P$[$^R%q%R#k^Q`bckory!V!X!Z!]!^!_!a!i!j!k!l!m!n!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b&k&l&n&o&p&q&r&s&t&u&v&w&x&y'P'Q'T'U#kfQ`bckory!V!X!Z!]!^!_!a!i!j!k!l!m!n!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b&k&l&n&o&p&q&r&s&t&u&v&w&x&y'P'Q'T'UQUO#kfQ`bckory!V!X!Z!]!^!_!a!i!j!k!l!m!n!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b&k&l&n&o&p&q&r&s&t&u&v&w&x&y'P'Q'T'USbQcS![b!^V#k!]#l$qR#s!a#khQ`bckory!V!X!Z!]!^!_!a!i!j!k!l!m!n!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b&k&l&n&o&p&q&r&s&t&u&v&w&x&y'P'Q'T'UQ!V`R!_cQ$k#fQ&P%fR&^&Q#kmQ`bckory!V!X!Z!]!^!_!a!i!j!k!l!m!n!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b&k&l&n&o&p&q&r&s&t&u&v&w&x&y'P'Q'T'U!tkQ`bckory!V!Z!]!^!a!i!j!k!l!m!n!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b'T'Ub&k!X&k&n&p&r&t&v&x'Pc&l!_&l&o&q&s&u&w&y'Q[!il#u#v#w#x#y[&n&m&z&{&|&}'O]&o#p%g%h%i%j%kY!jl#v#w#x#yY&p&m&{&|&}'OZ&q#p%h%i%j%kW!kl#w#x#yW&r&m&|&}'OX&s#p%i%j%kU!ll#x#yU&t&m&}'OV&u#p%j%kS!ml#yS&v&m'OT&w#p%kQ!nlQ&x&mR&y#pV!ul#p&mT!pl#pV!tl#p&m!opQ`bcory!V!X!Z!]!^!_!a!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b'P'Q'T'U!O!Za!S!v!x#S#f#j#q#z$V$e$g%]%b%c%f%v&X&[&`&g'R'SQ'T#hR'U#oQ$p#jQ'P'RR'Q'SUTOu!zRvTQ!OZQ#UzQ#Y{[#[!O#U#Y#a$[%RQ#a!RQ$[#XR%R$^Q#d!SS$i#d$tR$t#qQ!^bR#m!^QtRR!yt!flQ`bcory!V!Z!]!^!a!o#R#`#c#l$d$h$l$m$p$q$r$s%Y%`%l%x%}&W&b'T'UU!bk&k&lS#p!_'QU#t!i&n&oQ#u!jQ#v!kQ#w!lQ#x!mQ#y!nQ%g&qQ%h&sQ%i&uQ%j&wQ%k&yS&m!X'PQ&z&pQ&{&rQ&|&tQ&}&vR'O&xQ#OwR$S!}R!U`TeQc\",\n  nodeNames: \"⚠ QuotedTemplateStart QuotedTemplateEnd TemplateInterpolationStart TemplateInterpolationEnd TemplateDirectiveStart TemplateDirectiveEnd HeredocIdentifier Comment LineComment BlockComment ConfigFile Body Attribute Identifier Expression LiteralValue NumericLit BoolLit true false NullLit null StringLit TemplateLiteral TemplateExpr QuotedTemplate TemplateInterpolation StripMarker TemplateDirective TemplateFor TemplateForStart for in TemplateForEnd endfor TemplateIf TemplateIfIntro if TemplateElseIntro else TemplateIfEnd endif HeredocTemplate HeredocStart CollectionValue ] [ Tuple } { Object ObjectElem VariableExpr ) FunctionCall ( FunctionArguments Ellipsis ForExpr ForTupleExpr ForIntro ForCond ForObjectExpr Operation UnaryOperation ArithOp LogicOp BinaryOperation ArithOp ArithOp CompareOp CompareOp LogicOp LogicOp Index NewIndex LegacyIndex GetAttr Splat AttrSplat FullSplat Conditional ControlOp ControlOp Block\",\n  maxTerm: 123,\n  context: trackTemplate,\n  nodeProps: [\n    [\"openedBy\", 46,\"[\",49,\"{\"],\n    [\"closedBy\", 47,\"]\",50,\"}\"]\n  ],\n  skippedNodes: [0,8,9,10],\n  repeatNodeCount: 6,\n  tokenData: \"-h~RvX^#ipq#iqr$^st$kuv%Svw%Xxy%dyz%iz{%n{|%s|}%x}!O%}!O!P&S!P!Q&z!Q!R(^!R![)l![!]*c!^!_*h!_!`+V!`!a+l!a!b+y!c!},O!}#O,d#P#Q,w#R#S,O#T#o,O#o#p,|#p#q-R#q#r-^#r#s-c#y#z#i$f$g#i#BY#BZ#i$IS$I_#i$I|$JO#i$JT$JU#i$KV$KW#i&FU&FV#i~#nY#R~X^#ipq#i#y#z#i$f$g#i#BY#BZ#i$IS$I_#i$I|$JO#i$JT$JU#i$KV$KW#i&FU&FV#i~$cP#_~!_!`$f~$kO#i~~$pSX~OY$kZ;'S$k;'S;=`$|<%lO$k~%PP;=`<%l$k~%XO#b~~%[Pvw%_~%dO#j~~%iO!Y~~%nO!W~~%sO#`~~%xO#c~~%}O#V~~&SO#^~~&XR#l~z{&b!O!P&g!Q![&r~&gO#m~~&jP!O!P&m~&rO![~~&wP!o~!Q![&r~'PQ#a~z{'V!P!Q$k~'YTOz'Vz{'i{;'S'V;'S;=`(W<%lO'V~'lVOz'Vz{'i{!P'V!P!Q(R!Q;'S'V;'S;=`(W<%lO'V~(WOY~~(ZP;=`<%l'V~(cRa~!O!P(l!Q![)l#l#m)w~(oP!Q![(r~(wRa~!Q![(r!g!h)Q#X#Y)Q~)TR{|)^}!O)^!Q![)d~)aP!Q![)d~)iPa~!Q![)d~)qQa~!O!P(l!Q![)l~)zR!Q![*T!c!i*T#T#Z*T~*YRa~!Q![*T!c!i*T#T#Z*T~*hO#[~~*mQ#f~!^!_*s!_!`+Q~*xP#W~}!O*{~+QO#X~~+VO#g~~+[Q#SP!_!`+b!`!a+g~+gO#h~Q+lO#]Q~+qP#d~!_!`+t~+yO#e~~,OO#o~~,TT^~}!O,O!Q![,O!c!},O#R#S,O#T#o,O~,iP!P~z{,l~,oP#P#Q,r~,wO#n~~,|O!O~~-RO!S~~-UP#p#q-X~-^O#k~~-cO!R~~-hOl~\",\n  tokenizers: [scanQuotedTemplateStart, scanQuotedTemplateEnd, scanTemplateInterpolationStart, scanTemplateInterpolationEnd, scanTemplateDirectiveStart, scanTemplateDirectiveEnd, scanHeredocIdentifier, scanTemplateLiteralChunk, 0, 1],\n  topRules: {\"ConfigFile\":[0,11]},\n  dynamicPrecedences: {\"18\":1,\"21\":1},\n  specialized: [{term: 14, get: (value) => spec_Identifier[value] || -1}],\n  tokenPrec: 2320\n});\n\nconst hclLanguage = LRLanguage.define({\n    parser: parser.configure({\n        props: [\n            indentNodeProp.add({\n                Block: delimitedIndent({ closing: \"}\", align: false }),\n            }),\n            foldNodeProp.add({\n                \"Object Tuple TemplateFor TemplateIf\": foldInside,\n                BlockComment: (tree) => {\n                    return { from: tree.from + 2, to: tree.to - 2 };\n                },\n                HeredocTemplate(tree) {\n                    const start = tree.getChild(\"HeredocIdentifier\");\n                    if (!start) {\n                        return null;\n                    }\n                    return {\n                        from: start.to,\n                        to: tree.to,\n                    };\n                },\n                FunctionCall(tree) {\n                    const start = tree.getChild(\"(\");\n                    const end = tree.getChild(\")\");\n                    if (!start || !end) {\n                        return null;\n                    }\n                    return {\n                        from: start.from + 1,\n                        to: end.to - 1,\n                    };\n                },\n                Block(tree) {\n                    const start = tree.getChild(\"{\");\n                    const end = tree.getChild(\"}\");\n                    if (!start || !end) {\n                        return null;\n                    }\n                    return {\n                        from: start.from + 1,\n                        to: end.to - 1,\n                    };\n                },\n            }),\n            hclHighlight,\n        ],\n    }),\n    languageData: {\n        commentTokens: { line: \"#\", block: { open: \"/*\", close: \"*/\" } },\n    },\n});\nfunction hcl() {\n    return new LanguageSupport(hclLanguage);\n}\n\nexport { hcl, hclLanguage };\n"],
  "mappings": "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",
  "names": ["i"]
}
